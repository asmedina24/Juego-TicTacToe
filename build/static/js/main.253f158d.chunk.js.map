{"version":3,"sources":["Circle.jsx","Cross.jsx","Square.jsx","Result.jsx","App.js","serviceWorker.js","index.js"],"names":["Circle","_ref","position","value","react_default","a","createElement","width","height","viewBox","cx","r","Cross","className","x1","y1","x2","y2","EMPTY","CIRCLE","CROSS","Square","takeTurn","onClick","src_Circle","src_Cross","Result","winner","reset","TicTacToe","_React$useState","React","useState","player","positions","_React$useState2","Object","slicedToArray","state","setState","toConsumableArray","p","every","src_Square","src_Result","src","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.253f158d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Style.css'\r\n\r\n\r\n\r\n\r\n\r\nfunction Circle ({position, value}) {\r\n    return (\r\n    <svg width=\"100\" height=\"100\" viewBox=\"-50 -50 100 100\"><circle cx=\"0\" r=\"40\"/></svg>)\r\n  }\r\n\r\n  export default Circle;","import React from 'react'\r\nimport './Style.css'\r\n\r\n\r\n\r\n\r\nfunction Cross ({position, value}) {\r\n    return (\r\n        <svg width=\"100\" height=\"100\" viewBox=\"-50 -50 100 100\" className=\"cross\">\r\n            <line x1=\"-40\" y1=\"-40\" x2=\"40\"  y2=\"40\"/>\r\n            <line x1=\"-40\" y1=\"40\" x2=\"40\" y2=\"-40\" />\r\n            </svg>)\r\n  }\r\n\r\n  export default Cross;","\r\nimport React from 'react'\r\nimport './Style.css'\r\nimport Circle from './Circle'\r\nimport Cross from './Cross'\r\n\r\nconst EMPTY = 'EMPTY';\r\nconst CIRCLE = 'CIRCLE';\r\nconst CROSS = 'CROSS';\r\n\r\n\r\n\r\n\r\nfunction Square ({position, value, takeTurn}) {\r\n    function handleClick() {\r\n        if(value === EMPTY) takeTurn(position)\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n    <div className=\"square\" onClick={handleClick}>\r\n        {value === CIRCLE && <Circle/>}\r\n        {value === CROSS && <Cross/>}\r\n        \r\n        </div>)\r\n  }\r\n\r\n  export default Square;","import React from 'react'\r\nimport './Style.css'\r\n\r\n\r\nconst CIRCLE = 'CIRCLE';\r\nconst CROSS = 'CROSS';\r\n\r\n\r\n\r\n\r\nfunction Result ({winner, reset}) {\r\nreturn (\r\n    <div className=\"result\">\r\n       {winner === CIRCLE && 'EL circulo ganó'}\r\n       {winner === CROSS && 'La cruz ganó'}\r\n       {winner === 'Empate' && 'Empate'}\r\n       <button className=\"btn btn-secondary\" onClick={reset}>Reiniciar</button>\r\n        \r\n    </div>\r\n)\r\n}\r\n\r\nexport default Result;","import React from 'react';\nimport './Style.css';\nimport Square from './Square';\nimport Result from './Result'\n\n\nconst EMPTY = 'EMPTY';\nconst CIRCLE = 'CIRCLE';\nconst CROSS = 'CROSS';\n\nfunction detectWinner(p) {\n  if(p[0] === CIRCLE && p[1] === CIRCLE && p[2] === CIRCLE) return CIRCLE;\n  if(p[3] === CIRCLE && p[4] === CIRCLE && p[5] === CIRCLE) return CIRCLE;\n  if(p[6] === CIRCLE && p[7] === CIRCLE && p[8] === CIRCLE) return CIRCLE;\n\n  if(p[0] === CIRCLE && p[3] === CIRCLE && p[6] === CIRCLE) return CIRCLE;\n  if(p[1] === CIRCLE && p[4] === CIRCLE && p[7] === CIRCLE) return CIRCLE;\n  if(p[2] === CIRCLE && p[5] === CIRCLE && p[8] === CIRCLE) return CIRCLE;\n\n  if(p[0] === CIRCLE && p[4] === CIRCLE && p[8] === CIRCLE) return CIRCLE;\n  if(p[2] === CIRCLE && p[4] === CIRCLE && p[6] === CIRCLE) return CIRCLE;\n\n  if(p[0] === CROSS && p[1] === CROSS && p[2] === CROSS) return CROSS;\n  if(p[3] === CROSS && p[4] === CROSS && p[5] === CROSS) return CROSS;\n  if(p[6] === CROSS && p[7] === CROSS && p[8] === CROSS) return CROSS;\n\n  if(p[0] === CROSS && p[3] === CROSS && p[6] === CROSS) return CROSS;\n  if(p[1] === CROSS && p[4] === CROSS && p[7] === CROSS) return CROSS;\n  if(p[2] === CROSS && p[5] === CROSS && p[8] === CROSS) return CROSS;\n\n  if(p[0] === CROSS && p[4] === CROSS && p[8] === CROSS) return CROSS;\n  if(p[2] === CROSS && p[4] === CROSS && p[6] === CROSS) return CROSS;\n \n  if(p.every(position => position !== EMPTY)) return \"It is a tie\";\n}\n\n\nfunction TicTacToe() {\n  const [state, setState] = React.useState({\n    player: CIRCLE,\n    positions: [\n      EMPTY, EMPTY, EMPTY,\n      EMPTY, EMPTY, EMPTY,\n      EMPTY, EMPTY, EMPTY\n    ],\n \n  })\n\n  \n  function takeTurn(position) {\n    const positions = [...state.positions];\n    positions[position] = state.player;\n    \n    setState({\n      player: state.player === CIRCLE ? CROSS : CIRCLE,\n      positions,\n     \n    });\n  }\n\n  function reset() {\n    setState({\n        player: CIRCLE,\n        positions: [\n        EMPTY, EMPTY, EMPTY,\n        EMPTY, EMPTY, EMPTY,\n        EMPTY, EMPTY, EMPTY\n      ],\n    })\n\n  }\n\n  const winner = detectWinner(state.positions)\n \n  return (\n   <div>\n   {/* <div className=\"bienvenida\">\n      <h1 > Bienvenidos a Tic Tac Toe</h1>\n      </div> */}\n   <div>\n     \n       <div className=\"grid\">\n          <Square position={0} value={state.positions[0]}  takeTurn={takeTurn}/>\n          <Square position={1} value={state.positions[1]}  takeTurn={takeTurn}/>\n          <Square position={2} value={state.positions[2]}  takeTurn={takeTurn}/>\n          <Square position={3} value={state.positions[3]}  takeTurn={takeTurn}/>\n          <Square position={4} value={state.positions[4]}  takeTurn={takeTurn}/>\n          <Square position={5} value={state.positions[5]}  takeTurn={takeTurn}/>\n          <Square position={6} value={state.positions[6]}  takeTurn={takeTurn}/>\n          <Square position={7} value={state.positions[7]}  takeTurn={takeTurn}/>\n          <Square position={8} value={state.positions[8]}  takeTurn={takeTurn}/>\n        </div>\n          {winner && <Result winner={winner} reset={reset}/>}\n       <div>\n          <img src=\"https://i.imgur.com/2ROIUaG.png\"></img>\n       </div>\n    </div>\n    </div>\n   \n\n\n  )\n}\n\n\nexport default TicTacToe;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}